{"version":3,"file":"static/js/511.c2003ec9.chunk.js","mappings":"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","sources":["scenes/machineManagement/CreateMachineModal.jsx","scenes/machineManagement/MachineListModal.jsx","scenes/machineManagement/MachineManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, InputLabel, MenuItem, Select, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"../../components/Modal/modal.css\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { CreateMachineFromGetStores } from \"../../graphQL/Queries\";\r\n\r\n// {店面id、機台碼、NFCID、機台名稱、機台單次花費金額、備註}\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    storeId: yup.string().required(\"店面id必填\"),\r\n    name: yup.string().required(\"機台名稱必填\"),\r\n    code: yup.string().required(\"機台碼必填\"),\r\n    price: yup.string().required(\"機台單次花費金額必填\"),\r\n    // description: yup.string().required(\"備註必填\"),\r\n});\r\n\r\n\r\nexport default function CreateMachineModal({ props }) {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [modal, setModal] = useState(false);\r\n    const [counterCheck, setCounterCheck] = useState(true);\r\n    const handleCounterCheckChange = (event) => {\r\n        setCounterCheck(event.target.value);\r\n    };\r\n\r\n    const [countersToggle, setCountersToggle] = useState(false);\r\n    const handleCountersToggleChange = (event) => {\r\n        setCountersToggle(event.target.checked);\r\n    };\r\n\r\n\r\n    var btnTitle = \"新增\", confirmTitle = \"新增\", cancelTitle = \"取消\";\r\n\r\n    const initialValues = {\r\n        storeId: \"\",\r\n        storeName: \"\",\r\n        name: \"\",\r\n        code: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        counterCoin: \"\",\r\n        counterGift: \"\"\r\n    };\r\n\r\n    initialValues.storeId = props.id;\r\n    initialValues.storeName = props.name;\r\n\r\n\r\n\r\n    // GQL\r\n    const [ApolloCreateMachineFromGetStores, { loading, error, data }] = useLazyQuery(CreateMachineFromGetStores);\r\n    useEffect(() => {\r\n        if (data) {\r\n            console.log(data.getStore);\r\n            window.location.reload();\r\n        }\r\n    }, [data]);\r\n\r\n    const handleFormSubmit = (values) => {\r\n        const variables = {\r\n            args: [\r\n                {\r\n                    id: props.id\r\n                }\r\n            ],\r\n            name: values.name,\r\n            code: values.code,\r\n            price: parseInt(values.price),\r\n            counterCheck: counterCheck\r\n        };\r\n        if (values.description !== \"\") {\r\n            variables.description = values.description;\r\n        }\r\n        if (countersToggle) {\r\n            variables.counters = [\r\n                {\r\n                    counterType: \"coin\",\r\n                    count: parseInt(values.counterCoin)\r\n                },\r\n                {\r\n                    counterType: \"gift\",\r\n                    count: parseInt(values.counterGift)\r\n                }\r\n            ]\r\n        }\r\n        ApolloCreateMachineFromGetStores({ variables });\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n    };\r\n\r\n    if (modal) {\r\n        document.body.classList.add('active-modal')\r\n    } else {\r\n        document.body.classList.remove('active-modal')\r\n    }\r\n    return (\r\n        <>\r\n            {/* THE CONTENT OF THE BUTTON */}\r\n\r\n            <Button onClick={toggleModal} className=\"btn-modal\" sx={{ color: colors.primary[100], border: \"1px solid #111\", borderColor: colors.blueAccent[100] }}>{btnTitle}</Button>\r\n\r\n            {/* CONTENT OF WHAT HAPPEN AFTER BUTTON CLICKED */}\r\n            {modal && (\r\n                <Box className=\"modal\">\r\n                    <Box onClick={toggleModal} className=\"overlay\"></Box>\r\n                    <Box className=\"modal-content\" backgroundColor={colors.primary[500]}>\r\n                        <Box m=\"20px\">\r\n                            {initialValues.username}\r\n                            <Typography variant=\"h2\" sx={{ mb: \"30px\", textAlign: \"center\", fontSize: \"1.4rem\", fontWeight: \"600\", color: colors.grey[200] }}>\r\n                                {btnTitle}\r\n                            </Typography>\r\n\r\n                            <Formik\r\n                                onSubmit={handleFormSubmit}\r\n                                initialValues={initialValues}\r\n                                validationSchema={checkoutSchema}\r\n                            >\r\n                                {({\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleBlur,\r\n                                    handleChange,\r\n                                    handleSubmit,\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Box color={\"black\"}>\r\n                                            <Box display={\"flex\"}>\r\n                                                <TextField className=\"modal_input_textfield\"\r\n                                                    fullWidth\r\n                                                    disabled={true}\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"店面id\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.storeId}\r\n                                                    name=\"storeId\"\r\n                                                    error={!!touched.storeId && !!errors.storeId}\r\n                                                    helperText={touched.storeId && errors.storeId}\r\n                                                    sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                />\r\n                                                <TextField className=\"modal_input_textfield\"\r\n                                                    fullWidth\r\n                                                    disabled={true}\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"店面名稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.storeName}\r\n                                                    name=\"storeName\"\r\n                                                    error={!!touched.storeName && !!errors.storeName}\r\n                                                    helperText={touched.storeName && errors.storeName}\r\n                                                    sx={{ margin: \"0 0 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                />\r\n                                            </Box>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"機台號碼\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.code}\r\n                                                name=\"code\"\r\n                                                error={!!touched.code && !!errors.code}\r\n                                                helperText={touched.code && errors.code}\r\n                                                sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"機台名稱\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.name}\r\n                                                name=\"name\"\r\n                                                error={!!touched.name && !!errors.name}\r\n                                                helperText={touched.name && errors.name}\r\n                                                sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                            />\r\n                                            <Box display={\"flex\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"價格 (枚數)\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.price}\r\n                                                    name=\"price\"\r\n                                                    error={!!touched.price && !!errors.price}\r\n                                                    helperText={touched.price && errors.price}\r\n                                                    sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"備註\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.description}\r\n                                                    name=\"description\"\r\n                                                    error={!!touched.description && !!errors.description}\r\n                                                    helperText={touched.description && errors.description}\r\n                                                    sx={{ margin: \"0 0 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n\r\n                                            </Box>\r\n\r\n\r\n\r\n                                            <FormControl\r\n                                                fullWidth>\r\n                                                <InputLabel id=\"demo-simple-select-label\" >機械錶檢查</InputLabel>\r\n                                                <Select\r\n                                                    sx={{ borderRadius: \"10px\", background: colors.primary[400] }}\r\n                                                    labelId=\"demo-simple-select-label\"\r\n                                                    id=\"demo-simple-select\"\r\n                                                    value={counterCheck}\r\n                                                    label=\"機械錶檢查\"\r\n                                                    onChange={handleCounterCheckChange}\r\n                                                >\r\n                                                    <MenuItem value={true}>是</MenuItem>\r\n                                                    <MenuItem value={false}>否</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n                                            <Typography variant=\"h4\" sx={{ margin: \"1rem 0 .5rem 0\", color: \"white\" }}>機械錶</Typography>\r\n                                            <Box>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            checked={countersToggle}\r\n                                                            onChange={handleCountersToggleChange}\r\n                                                            name=\"countersToggle\"\r\n                                                            color=\"success\"\r\n                                                        />\r\n                                                    }\r\n                                                    label=\"機械錶\"\r\n                                                    style={{ color: colors.grey[100] }}\r\n                                                />\r\n\r\n                                            </Box>\r\n\r\n                                            <Box display={countersToggle ? \"block\" : \"none\"}>\r\n                                                <Box display={\"flex\"}>\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        variant=\"filled\"\r\n                                                        type=\"number\"\r\n                                                        label=\"入錶\"\r\n                                                        onBlur={handleBlur}\r\n                                                        onChange={handleChange}\r\n                                                        value={values.counterCoin}\r\n                                                        name=\"counterCoin\"\r\n                                                        error={!!touched.counterCoin && !!errors.counterCoin}\r\n                                                        helperText={touched.counterCoin && errors.counterCoin}\r\n                                                        sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                    />\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        variant=\"filled\"\r\n                                                        type=\"number\"\r\n                                                        label=\"出錶\"\r\n                                                        onBlur={handleBlur}\r\n                                                        onChange={handleChange}\r\n                                                        value={values.counterGift}\r\n                                                        name=\"counterGift\"\r\n                                                        error={!!touched.counterGift && !!errors.counterGift}\r\n                                                        helperText={touched.counterGift && errors.counterGift}\r\n                                                        sx={{ margin: \"0 0 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                    />\r\n                                                </Box>\r\n                                            </Box>\r\n\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" justifyContent=\"center\" >\r\n\r\n                                            <Button type=\"submit\" color=\"success\" variant=\"contained\" sx={{ minWidth: \"8rem\", padding: \".55rem 1rem\", margin: \".5rem .5rem 0 .5rem\", borderRadius: \"8px\", background: colors.blueAccent[400] }}>\r\n                                                <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: \"white\" }}>\r\n                                                    {confirmTitle}\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        </Box >\r\n                    </Box>\r\n                </Box>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, InputLabel, MenuItem, Select, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { useQuery, useLazyQuery } from '@apollo/client'\r\nimport \"../../components/Modal/modal.css\";\r\nimport { tokens } from \"../../theme\";\r\nimport ConfirmModal from \"../../components/Modal/ConfirmModal\";\r\nimport { GetMachine, RemoveMachine, UnBanMachine, UpdateMachine } from \"../../graphQL/Queries\";\r\nimport { replaceNullWithEmptyString } from \"../../utils/Utils\";\r\nimport QRCode from \"qrcode\";\r\n\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    name: yup.string().required(\"required\"),\r\n    price: yup.number().required(\"required\"),\r\n    // desc: yup.string().required(\"required\"),\r\n});\r\n\r\n\r\nexport default function MachineListModal({ props }) {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [modal, setModal] = useState(false);\r\n    //REF\r\n    const [status, setStatus] = useState('disable');\r\n    const handleStatusChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    // counter\r\n    const [counterCheck, setCounterCheck] = useState(true);\r\n    const handleCounterCheckChange = (event) => {\r\n        setCounterCheck(event.target.value);\r\n    };\r\n\r\n    const [countersToggle, setCountersToggle] = useState(false);\r\n    const handleCountersToggleChange = (event) => {\r\n        setCountersToggle(event.target.checked);\r\n    };\r\n\r\n\r\n    var btnTitle = \"修改\", confirmTitle = \"更新\", deleteTitle = \"移除\", banTitle = \"封鎖\", unbanTitle = \"解封\";\r\n    const [initialValues, setInitialValues] = useState({\r\n        id: 0,\r\n        UUID: \"\",\r\n        name: \"\",\r\n        code: \"\",\r\n        price: 0,\r\n        qrCode: \"\",\r\n        status: \"\",\r\n        connStatus: \"\",\r\n        desc: \"\",\r\n    });\r\n\r\n\r\n    // ===================== REMOVE MACHINE QUERY =====================\r\n    const [ApolloRemoveMachine, { loading, error, data }] = useLazyQuery(RemoveMachine);\r\n    useEffect(() => {\r\n        if (data) {\r\n            window.location.reload();\r\n        }\r\n    }, [data]);\r\n\r\n    // HANDLE REMOVE MACHINE\r\n    const handleDelete = (e) => {\r\n        var result = window.confirm(\"Are you sure you want to delete this machine?\");\r\n        if (result) {\r\n            ApolloRemoveMachine({\r\n                variables: {\r\n                    args: [\r\n                        {\r\n                            id: props.id\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // ===================== INITIAL VALUES FROM GETMACHINE =====================\r\n    const { loading: loading3, error: error3, data: data3 } = useQuery(GetMachine\r\n        , {\r\n            variables: {\r\n                args: [\r\n                    {\r\n                        id: props.id\r\n                    }\r\n                ],\r\n            }\r\n        }\r\n    );\r\n    useEffect(() => {\r\n        if (data3) {\r\n            const nonNullData = replaceNullWithEmptyString(data3.getMachine[0]);\r\n            setInitialValues({\r\n                // ...initialValues,\r\n                // ...nonNullData\r\n                id: nonNullData.id,\r\n                UUID: nonNullData.uuid,\r\n                name: nonNullData.name,\r\n                code: nonNullData.code,\r\n                price: nonNullData.price,\r\n                qrCode: nonNullData.qrCode,\r\n                status: nonNullData.status.name,\r\n                desc: nonNullData.description,\r\n            });\r\n            generateQrCode(nonNullData.qrCode);\r\n\r\n\r\n            //set status only if not banned\r\n            if (nonNullData.status.name !== \"banned\") {\r\n                setStatus(nonNullData.status.name)\r\n            }\r\n            setCounterCheck(nonNullData.counterInfo.counterCheck)\r\n\r\n            if (Array.isArray(nonNullData.counterInfo.counters) && nonNullData.counterInfo.counters.length > 0) {\r\n                setCountersToggle(true);\r\n\r\n                nonNullData.counterInfo.counters.forEach(counter => {\r\n                    const key = `${counter.counterType}`;\r\n                    // console.log(key + \"-\" + counter.count);\r\n                    setInitialValues(prevState => ({\r\n                        ...prevState,\r\n                        [key]: counter.count,\r\n                    }));\r\n                });\r\n            }\r\n\r\n        }\r\n    }, [data3]);\r\n\r\n    // UPDATE BRAND MUTATION\r\n    const [ApolloUpdateMachine, { loading: loading4, error: error4, data: data4 }] = useLazyQuery(UpdateMachine);\r\n    useEffect(() => {\r\n        if (data4) {\r\n            window.location.reload();\r\n        }\r\n    }, [data4]);\r\n\r\n    // UNBAN MUTATION\r\n    const [ApolloUnBanMachine, { loading: loading5, error: error5, data: data5 }] = useLazyQuery(UnBanMachine);\r\n    useEffect(() => {\r\n        if (data5) {\r\n            window.location.reload();\r\n        }\r\n    }, [data5]);\r\n\r\n\r\n\r\n    const handleFormSubmit = (values) => {\r\n        const variables = {\r\n            args: [\r\n                {\r\n                    id: props.id,\r\n                }\r\n            ],\r\n            name: values.name,\r\n            description: values.desc,\r\n\r\n            statusId: initialValues.status === 'banned' ? null : status,\r\n            price: parseInt(values.price),\r\n            counterCheck: counterCheck\r\n        };\r\n        if (countersToggle) {\r\n            variables.counters = [\r\n                {\r\n                    counterType: \"coin\",\r\n                    count: parseInt(values.coin)\r\n                },\r\n                {\r\n                    counterType: \"gift\",\r\n                    count: parseInt(values.gift)\r\n                }\r\n            ]\r\n        }\r\n        // console.log(variables);\r\n        ApolloUpdateMachine({ variables });\r\n\r\n\r\n    };\r\n\r\n    // ===================== BAN MACHINE QUERY =====================\r\n    const handleUnBan = (e) => {\r\n        var result = window.confirm(\"Are you sure you want to unban this machine?\");\r\n        if (result) {\r\n            ApolloUnBanMachine({\r\n                variables: {\r\n                    args: [\r\n                        {\r\n                            id: props.id\r\n                        }\r\n                    ],\r\n                    reason: \"null\"\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    // qrcode\r\n    const [imgUrl, setImgUrl] = useState(''); // for qr code generation\r\n    const generateQrCode = async (inputText) => {\r\n        try {\r\n            const response = await QRCode.toDataURL(inputText);\r\n            setImgUrl(response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n    };\r\n\r\n    if (modal) {\r\n        document.body.classList.add('active-modal')\r\n    } else {\r\n        document.body.classList.remove('active-modal')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* THE CONTENT OF THE BUTTON */}\r\n\r\n            <Button onClick={toggleModal} className=\"btn-modal\" sx={{ color: colors.primary[100], border: \"1px solid #111\", borderColor: colors.blueAccent[100] }}>{btnTitle}</Button>\r\n\r\n            {/* CONTENT OF WHAT HAPPEN AFTER BUTTON CLICKED */}\r\n            {modal && (\r\n                <Box className=\"modal\">\r\n                    <Box onClick={toggleModal} className=\"overlay\"></Box>\r\n                    <Box className=\"modal-content\" backgroundColor={colors.primary[500]}>\r\n                        <Box m=\"20px\">\r\n                            <Formik\r\n                                onSubmit={handleFormSubmit}\r\n                                initialValues={initialValues}\r\n                                validationSchema={checkoutSchema}\r\n                            >\r\n                                {({\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleBlur,\r\n                                    handleChange,\r\n                                    handleSubmit,\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Box color={\"black\"} >\r\n\r\n                                            <Box display={\"flex\"} >\r\n                                                <Box width={\"100%\"} display={\"flex\"} flexDirection={\"column\"} justifyContent={\"center\"}>\r\n                                                    <Typography variant=\"h2\" sx={{ fontSize: \"2rem\", fontWeight: \"600\", color: colors.grey[200] }}>\r\n                                                        {btnTitle}\r\n                                                    </Typography>\r\n                                                    {(() => {\r\n                                                        if (initialValues.status === \"disable\") {\r\n                                                            return (\r\n                                                                <Typography variant=\"h5\" color={colors.primary[100]} sx={{ margin: \".5rem 0\" }}>\r\n                                                                    停用\r\n                                                                </Typography>)\r\n                                                        }\r\n                                                        else if (initialValues.status === \"banned\") {\r\n                                                            return (\r\n                                                                <Typography variant=\"h5\" color={colors.redAccent[500]} sx={{ margin: \".5rem 0\" }}>\r\n                                                                    封鎖\r\n                                                                </Typography>)\r\n                                                        }\r\n                                                        else if (initialValues.status === \"removed\") {\r\n                                                            return (\r\n                                                                <Typography variant=\"h5\" color={colors.redAccent[500]} sx={{ margin: \".5rem 0\" }}>\r\n                                                                    删除\r\n                                                                </Typography>)\r\n                                                        }\r\n                                                        else {\r\n                                                            return (\r\n                                                                <Typography variant=\"h5\" color={colors.greenAccent[300]} sx={{ margin: \".5rem 0\" }}>\r\n                                                                    正常\r\n                                                                </Typography>)\r\n                                                        }\r\n                                                    })()}\r\n\r\n                                                </Box>\r\n\r\n                                                <Box display={\"flex\"} justifyContent={\"center\"} padding={\".5rem\"} flexDirection={\"column\"} >\r\n                                                    {\r\n                                                        imgUrl ?\r\n                                                            <a href={imgUrl} download={initialValues.name + \".jpg\"}>\r\n                                                                <img src={imgUrl} alt=\"qrcode\" width={\"100px\"} height={\"auto\"} />\r\n                                                            </a> : null\r\n                                                    }\r\n                                                    <Typography variant=\"h5\" color={colors.grey[500]} sx={{ textAlign: \"center\", fontSize: \"10px\", margin: \"0rem .5rem\" }}>\r\n                                                        Click to download\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n\r\n\r\n\r\n\r\n                                            <Box display={\"flex\"} justifyContent={\"center\"}>\r\n                                                <TextField className=\"modal_input_textfield\"\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"機台名稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.name}\r\n                                                    name=\"name\"\r\n                                                    error={!!touched.name && !!errors.name}\r\n                                                    helperText={touched.name && errors.name}\r\n                                                    sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                />\r\n                                                <FormControl sx={{ minWidth: 150 }}>\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >{initialValues.status}</InputLabel>\r\n                                                    <Select\r\n                                                        disabled={initialValues.status === \"banned\"}\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400] }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={status}\r\n                                                        label=\"status\"\r\n                                                        onChange={handleStatusChange}\r\n                                                    >\r\n                                                        <MenuItem value={\"normal\"}>正常</MenuItem>\r\n                                                        <MenuItem value={\"disable\"}>停用</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Box>\r\n\r\n\r\n                                            <TextField className=\"modal_input_textfield\"\r\n                                                fullWidth\r\n                                                disabled={true}\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"UUID\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.UUID}\r\n                                                name=\"UUID\"\r\n                                                error={!!touched.UUID && !!errors.UUID}\r\n                                                helperText={touched.UUID && errors.UUID}\r\n                                                sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                disabled={true}\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"機台號碼\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.code}\r\n                                                name=\"code\"\r\n                                                error={!!touched.code && !!errors.code}\r\n                                                helperText={touched.code && errors.code}\r\n                                                sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                            />\r\n\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                disabled={true}\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"QR Code Payload\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.qrCode}\r\n                                                name=\"qrCode\"\r\n                                                error={!!touched.qrCode && !!errors.qrCode}\r\n                                                helperText={touched.qrCode && errors.qrCode}\r\n                                                sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                            />\r\n                                            <Box display={\"flex\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"機台單次花費金額\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.price}\r\n                                                    name=\"price\"\r\n                                                    error={!!touched.price && !!errors.price}\r\n                                                    helperText={touched.price && errors.price}\r\n                                                    sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"備註\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.desc}\r\n                                                    name=\"desc\"\r\n                                                    error={!!touched.desc && !!errors.desc}\r\n                                                    helperText={touched.desc && errors.desc}\r\n                                                    sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                            </Box>\r\n\r\n                                            <FormControl\r\n                                                fullWidth>\r\n                                                <InputLabel id=\"demo-simple-select-label\" >機械錶檢查</InputLabel>\r\n                                                <Select\r\n                                                    sx={{ borderRadius: \"10px\", background: colors.primary[400] }}\r\n                                                    labelId=\"demo-simple-select-label\"\r\n                                                    id=\"demo-simple-select\"\r\n                                                    value={counterCheck}\r\n                                                    label=\"機械錶檢查\"\r\n                                                    onChange={handleCounterCheckChange}\r\n                                                >\r\n                                                    <MenuItem value={true}>是</MenuItem>\r\n                                                    <MenuItem value={false}>否</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n                                            <Typography variant=\"h4\" sx={{ margin: \"1rem 0 .5rem 0\", color: \"white\" }}>機械錶</Typography>\r\n                                            <Box>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            checked={countersToggle}\r\n                                                            onChange={handleCountersToggleChange}\r\n                                                            name=\"countersToggle\"\r\n                                                            color=\"success\"\r\n                                                        />\r\n                                                    }\r\n                                                    label=\"機械錶\"\r\n                                                    style={{ color: colors.grey[100] }}\r\n                                                />\r\n\r\n                                            </Box>\r\n\r\n                                            <Box display={countersToggle ? \"block\" : \"none\"}>\r\n                                                <Box display={\"flex\"}>\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        variant=\"filled\"\r\n                                                        type=\"number\"\r\n                                                        label=\"入錶\"\r\n                                                        onBlur={handleBlur}\r\n                                                        onChange={handleChange}\r\n                                                        value={values.coin}\r\n                                                        name=\"coin\"\r\n                                                        error={!!touched.coin && !!errors.coin}\r\n                                                        helperText={touched.coin && errors.coin}\r\n                                                        sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                    />\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        variant=\"filled\"\r\n                                                        type=\"number\"\r\n                                                        label=\"出錶\"\r\n                                                        onBlur={handleBlur}\r\n                                                        onChange={handleChange}\r\n                                                        value={values.gift}\r\n                                                        name=\"gift\"\r\n                                                        error={!!touched.gift && !!errors.gift}\r\n                                                        helperText={touched.gift && errors.gift}\r\n                                                        sx={{ margin: \"0 0 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                    />\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Box>\r\n                                        <Box display=\"flex\" justifyContent=\"center\" >\r\n                                            <Box display=\"flex\" justifyContent=\"center\" >\r\n                                                <Button onClick={handleDelete} id={values.id} variant=\"contained\" sx={{ minWidth: \"100px\", padding: \".5rem 1.5rem\", margin: \"0 1rem\", borderRadius: \"10px\", border: \"2px solid #ff2f00\" }}>\r\n                                                    <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: \"white\" }}>\r\n                                                        {deleteTitle}\r\n                                                    </Typography>\r\n                                                </Button>\r\n\r\n                                                {values.status === \"banned\" ? (\r\n                                                    <Button onClick={handleUnBan} id={values.id} variant=\"contained\" sx={{ minWidth: \"100px\", padding: \".5rem 1.5rem\", margin: \"0 1rem\", borderRadius: \"10px\", border: \"2px solid #fff\" }}>\r\n                                                        <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: \"white\" }}>\r\n                                                            {unbanTitle}\r\n                                                        </Typography>\r\n                                                    </Button>\r\n                                                ) : (\r\n                                                    <ConfirmModal props={{ type: \"machine\", id: props.id }} />\r\n                                                )}\r\n\r\n                                                <Button type=\"submit\" color=\"success\" sx={{ minWidth: \"100px\", padding: \".5rem 1.5rem\", margin: \"0 1rem\", borderRadius: \"10px\", background: colors.grey[100] }}>\r\n                                                    <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: colors.grey[700] }}>\r\n                                                        {confirmTitle}\r\n                                                    </Typography>\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        </Box >\r\n                    </Box>\r\n                </Box>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useContext, useRef, useLayoutEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useQuery } from '@apollo/client'\r\n\r\n// THEME\r\nimport { Box, Button, Card, CardContent, Grid, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { ColorModeContext, tokens } from \"../../theme\";\r\n// ICONS\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CreateMachineModal from './CreateMachineModal';\r\nimport MachineListModal from './MachineListModal';\r\nimport { GetMachineList } from '../../graphQL/Queries';\r\nimport Pagination from '../../components/Pagination';\r\nimport Refresh from '../../components/Refresh';\r\n\r\n// QRCODE\r\nimport QRCode from 'qrcode'\r\nimport jsPDF from 'jspdf';\r\nimport Loader from '../../components/loader/Loader';\r\nimport Error from '../../components/error/Error';\r\n\r\n\r\n\r\nconst MachineManagement = () => {\r\n    const location = useLocation();\r\n    const state = location.state;\r\n    // console.log(state); // output: \"the-page-id\"\r\n    // console.log(\"STATE\" + state.data.id); // output: \"the-page-id\"\r\n    // console.log(\"STATE\" + state.data.name); // output: \"the-page-id\"\r\n\r\n    //THEME\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const colorMode = useContext(ColorModeContext);\r\n\r\n    // ====================== STATES ======================\r\n\r\n    // PAGINATION\r\n    const [limit, setLimit] = useState(10);\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const handlePageChange = ({ limit, offset }) => {\r\n        setLimit(limit);\r\n        setOffset(offset);\r\n        setCurrentPage(offset / limit + 1);\r\n    }\r\n\r\n    const [searchFilter, setSearchFilter] = useState('');\r\n    const [cityFilter, setCityFilter] = useState('');\r\n\r\n    const [initMachineDatas, setInitMachineDatas] = useState([]);\r\n    const [machineDatas, setMachineDatas] = useState([]);\r\n\r\n\r\n    const [imgUrls, setImgUrls] = useState({});\r\n\r\n\r\n    //REF\r\n    const searchRef = useRef('');\r\n\r\n    const { loading, error, data } = useQuery(GetMachineList\r\n        , {\r\n            variables: {\r\n                args: [\r\n                    {\r\n                        id: state.data.id\r\n                    }\r\n                ],\r\n                limit: limit,\r\n                offset: offset\r\n            }\r\n        }\r\n    );\r\n    useEffect(() => {\r\n        if (data) {\r\n            setMachineDatas(data.getStore[0].managerGetMachines);\r\n            setInitMachineDatas(data.getStore[0].managerGetMachines);\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    //FUNCTIONS\r\n    const submitSearch = () => {\r\n        //CALL SEARCH FUNCTION\r\n        let value = searchRef.current.value;\r\n        if (value.length > 2) {\r\n            let search = arraySearch(machineDatas, value);\r\n            setMachineDatas(search)\r\n        } else { //IF SEARCH VALUE IS LESS THAN 3 CHARACTERS, RESET BRANDS TO INIT BRANDS\r\n            setMachineDatas(initMachineDatas)\r\n        }\r\n    }\r\n\r\n    //SEARCH FUNCTION\r\n    const arraySearch = (array, keyword) => {\r\n        const searchTerm = keyword\r\n\r\n        return array.filter(value => {\r\n            return value.code.match(new RegExp(searchTerm, 'g')) ||\r\n                value.name.match(new RegExp(searchTerm, 'g'))\r\n        })\r\n    }\r\n\r\n    // =================== QR CODE ===================\r\n    useEffect(() => {\r\n        if (machineDatas) {\r\n            for (const machine of machineDatas) {\r\n                generateQrCode(machine.name, machine.qrCode);\r\n            }\r\n        }\r\n    }, [machineDatas]);\r\n\r\n\r\n    useEffect(() => {\r\n        setImgUrls({});// clear the img url array so it can download per page\r\n        const startIndex = offset;\r\n        const endIndex = offset + limit;\r\n        const machinesInCurrentPage = machineDatas.slice(startIndex, endIndex);\r\n        for (const machine of machinesInCurrentPage) {\r\n            generateQrCode(machine.name, machine.qrCode);\r\n        }\r\n        // ...\r\n    }, [offset, limit, machineDatas]);\r\n\r\n\r\n    const generateQrCode = async (machineName, qrCodePaypload) => {\r\n        try {\r\n            const response = await QRCode.toDataURL(qrCodePaypload);\r\n            setImgUrls(prevUrls => ({ ...prevUrls, [machineName]: response }));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //create pdf\r\n    function createPdfWithImages(images, keys) {\r\n        const doc = new jsPDF();\r\n\r\n        images.forEach((imageUrl, index) => {\r\n            const x = index % 2 === 0 ? 10 : 105;\r\n            const y = Math.floor(index / 2) % 2 === 0 ? 10 : 148;\r\n            doc.addImage(imageUrl, 'JPEG', x, y, 88, 88);\r\n            doc.text(keys[index], x + 44, y + 88, { align: 'center' });\r\n            if (index % 4 === 3) {\r\n                doc.addPage();\r\n            }\r\n        });\r\n        return doc;\r\n    }\r\n\r\n\r\n    function downloadPdf() {\r\n        const keys = Object.keys(imgUrls);\r\n        const images = Object.values(imgUrls);\r\n        // const keys = Object.keys(imgUrls).slice(startIndex, endIndex);\r\n        // const images = Object.values(imgUrls).slice(startIndex, endIndex);\r\n\r\n        const doc = createPdfWithImages(images, keys);\r\n        doc.save(`${currentPage}_${state.data.name}_機台_QR.pdf`);\r\n    }\r\n\r\n    if (loading) return <Loader />;\r\n    if (error) return <Error />;\r\n\r\n    return (\r\n        <Box p={\"0 1rem 1rem 1rem\"}>\r\n            <h1 className='userManagement_title'>{state.data.name} - 機台管理</h1>\r\n            <Typography variant=\"h4\" sx={{ color: colors.grey[400], margin: \"-1rem 0 1rem 0\" }}>{state.data.location.city} - {state.data.location.district} - {state.data.location.address}</Typography>\r\n            {/* SEARCH DIV */}\r\n            <Box display=\"flex\" marginBottom={5}>\r\n                {/* name Search */}\r\n                <Box\r\n                    display=\"flex\"\r\n                    mr={2}\r\n                    backgroundColor={colors.primary[400]}\r\n                    borderRadius=\"10px\">\r\n                    <InputBase sx={{ ml: 2, pr: 2, flex: 1, minWidth: \"200px\" }} placeholder=\"機台名稱\" inputRef={searchRef} />\r\n                </Box>\r\n\r\n                {/* SEARCH BTN */}\r\n                <Button sx={{\r\n                    backgroundColor: colors.primary[300],\r\n                    color: colors.grey[100],\r\n                    minWidth: \"120px\",\r\n                    height: \"52px\",\r\n                    marginLeft: \"1rem\",\r\n                    borderRadius: \"10px\",\r\n                    padding: \"0px\",\r\n                    marginRight: \"2rem\",\r\n                    ':hover': {\r\n                        bgcolor: colors.primary[300],\r\n                        border: '1px solid white',\r\n                    }\r\n                }}\r\n                    onClick={submitSearch}>\r\n                    <SearchIcon sx={{ mr: \"10px\", fontsize: \".8rem\", color: \"white\" }} />\r\n                    <Typography color={\"white\"} variant=\"h5\" fontWeight=\"500\">\r\n                        查詢\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Box\r\n                    display=\"flex\"\r\n                    borderRadius=\"10px\"\r\n                    marginLeft={\"auto\"}\r\n                    padding={\"0\"}\r\n                >\r\n\r\n                    <Button sx={{\r\n                        backgroundColor: colors.primary[300],\r\n                        color: colors.grey[100],\r\n                        minWidth: \"120px\",\r\n                        height: \"52px\",\r\n                        marginLeft: \"1rem\",\r\n                        borderRadius: \"10px\",\r\n                        padding: \"0px\",\r\n                        marginRight: \"2rem\",\r\n                        ':hover': {\r\n                            bgcolor: colors.primary[300],\r\n                            border: '1px solid white',\r\n                        }\r\n                    }}\r\n                        onClick={downloadPdf}\r\n                    >\r\n                        <Typography color={\"white\"} variant=\"h5\" fontWeight=\"500\">\r\n                            下載 QR\r\n                        </Typography>\r\n                    </Button>\r\n\r\n                    <CreateMachineModal props={state.data} />\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n            {/* TABLE DIV */}\r\n            <Box className=\"recent_transaction_container\"\r\n                backgroundColor={colors.primary[400]}\r\n                borderRadius=\"10px\"\r\n                height={\"40vh\"}\r\n            >\r\n                {/* PAGINATION & REFRESH DIV */}\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    borderBottom={`0px solid ${colors.primary[500]}`}\r\n                    colors={colors.grey[100]}\r\n                    p=\"15px\"\r\n                >\r\n                    <Box width={\"90%\"}>\r\n                        {/* pagination */}\r\n                        <Pagination\r\n                            limit={limit}\r\n                            offset={offset}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box width={\"10%\"}>\r\n                        {/* refresh button */}\r\n                        <Refresh\r\n                            limit={limit}\r\n                            offset={offset}\r\n                            onPageChange={handlePageChange} />\r\n                    </Box>\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                    borderBottom={`4px solid ${colors.primary[500]}`}\r\n                    background={colors.grey[300]}\r\n                    p=\"10px\"\r\n                    maxHeight={\"100px\"}\r\n                >\r\n\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">UUID</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">機台名稱</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">機台號碼</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">連接狀態</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">更新資料</Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* machine data map here */}\r\n                <Box\r\n                    backgroundColor={colors.primary[400]}\r\n                    borderRadius=\"10px\"\r\n                    height={\"100%\"}\r\n                    overflow={\"auto\"}\r\n                >\r\n                    {machineDatas.map((item, i) => (\r\n                        <Box\r\n                            key={`${item.id}-${i}`}\r\n                            display=\"flex\"\r\n                            justifyContent=\"space-between\"\r\n                            alignItems=\"center\"\r\n                            borderBottom={`4px solid ${colors.primary[500]}`}\r\n                            p=\"10px\"\r\n                        >\r\n                            <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} textAlign={\"center\"} padding={\"0 1rem\"}>{item.uuid}</Box>\r\n                            <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} textAlign={\"center\"}>{item.name}</Box>\r\n                            <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} textAlign={\"center\"}>{item.code}</Box>\r\n                            <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} textAlign={\"center\"}>\r\n                                {(() => {\r\n                                    if (item.connStatus === true) {\r\n                                        return (\r\n                                            <Typography variant=\"h5\" color={colors.greenAccent[400]} sx={{ margin: \".5rem .5rem\" }}>\r\n                                                連線中\r\n                                            </Typography>\r\n                                        )\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n                                            <Typography variant=\"h5\" color={colors.redAccent[500]} sx={{ margin: \".5rem .5rem\" }}>\r\n                                                已斷線\r\n                                            </Typography>\r\n                                        )\r\n                                    }\r\n                                })()}\r\n                            </Box>\r\n                            <Box\r\n                                width={\"20%\"}\r\n                                display={\"flex\"}\r\n                                alignItems={\"center\"} justifyContent={\"center\"}\r\n                                borderRadius=\"4px\">\r\n                                <MachineListModal props={item} />\r\n                            </Box>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MachineManagement"],"names":["checkoutSchema","yup","shape","storeId","required","name","code","price","CreateMachineModal","props","theme","useTheme","colors","tokens","palette","mode","useState","modal","setModal","counterCheck","setCounterCheck","handleCounterCheckChange","event","target","value","countersToggle","setCountersToggle","handleCountersToggleChange","checked","initialValues","storeName","description","counterCoin","counterGift","id","useLazyQuery","CreateMachineFromGetStores","ApolloCreateMachineFromGetStores","data","loading","error","useEffect","console","log","getStore","window","location","reload","toggleModal","document","body","classList","add","remove","Button","onClick","className","sx","color","primary","border","borderColor","blueAccent","Box","backgroundColor","m","username","Typography","variant","mb","textAlign","fontSize","fontWeight","grey","onSubmit","values","variables","args","parseInt","counters","counterType","count","validationSchema","errors","touched","handleBlur","handleChange","handleSubmit","display","TextField","fullWidth","disabled","type","label","onBlur","onChange","helperText","margin","borderRadius","marginBottom","FormControl","InputLabel","Select","background","labelId","MenuItem","FormControlLabel","control","Checkbox","style","justifyContent","minWidth","padding","MachineListModal","status","setStatus","handleStatusChange","UUID","qrCode","connStatus","desc","setInitialValues","RemoveMachine","ApolloRemoveMachine","handleDelete","e","confirm","useQuery","GetMachine","data3","nonNullData","replaceNullWithEmptyString","getMachine","uuid","generateQrCode","counterInfo","Array","isArray","length","forEach","counter","key","prevState","UpdateMachine","ApolloUpdateMachine","data4","UnBanMachine","ApolloUnBanMachine","data5","handleUnBan","reason","imgUrl","setImgUrl","inputText","QRCode","response","statusId","coin","gift","width","flexDirection","redAccent","greenAccent","href","download","src","alt","height","ConfirmModal","state","useLocation","useContext","ColorModeContext","limit","setLimit","offset","setOffset","currentPage","setCurrentPage","handlePageChange","initMachineDatas","setInitMachineDatas","machineDatas","setMachineDatas","imgUrls","setImgUrls","searchRef","useRef","GetMachineList","managerGetMachines","arraySearch","array","keyword","searchTerm","filter","match","RegExp","machine","startIndex","endIndex","machinesInCurrentPage","slice","machineName","qrCodePaypload","prevUrls","Loader","Error","p","city","district","address","mr","InputBase","ml","pr","flex","placeholder","inputRef","marginLeft","marginRight","bgcolor","current","search","Search","fontsize","keys","Object","images","doc","jsPDF","imageUrl","index","x","y","Math","floor","addImage","text","align","addPage","createPdfWithImages","save","borderBottom","Pagination","onPageChange","Refresh","alignItems","maxHeight","overflow","map","item","i"],"sourceRoot":""}