{"version":3,"file":"static/js/632.87c94cd8.chunk.js","mappings":"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","sources":["data/cityData.js","scenes/store/StoreListModal.jsx","../node_modules/@mui/material/useMediaQuery/useMediaQuery.js","scenes/store/CreateStoreModal.jsx","scenes/store/StoreManagement.jsx"],"sourcesContent":["export const areaData = {\r\n  '台北市': [\r\n    '中正區', '大同區', '中山區', '萬華區', '信義區', '松山區', '大安區', '南港區', '北投區', '內湖區', '士林區', '文山區'\r\n  ],\r\n  '新北市': [\r\n    '板橋區', '新莊區', '泰山區', '林口區', '淡水區', '金山區', '八里區', '萬里區', '石門區', '三芝區', '瑞芳區', '汐止區', '平溪區', '貢寮區', '雙溪區', '深坑區', '石碇區', '新店區', '坪林區', '烏來區', '中和區', '永和區', '土城區', '三峽區', '樹林區', '鶯歌區', '三重區', '蘆洲區', '五股區'\r\n  ],\r\n  '基隆市': [\r\n    '仁愛區', '中正區', '信義區', '中山區', '安樂區', '暖暖區', '七堵區'\r\n  ],\r\n  '桃園市': [\r\n    '桃園區', '中壢區', '平鎮區', '八德區', '楊梅區', '蘆竹區', '龜山區', '龍潭區', '大溪區', '大園區', '觀音區', '新屋區', '復興區'\r\n  ],\r\n  '新竹縣': [\r\n    '竹北市', '竹東鎮', '新埔鎮', '關西鎮', '峨眉鄉', '寶山鄉', '北埔鄉', '橫山鄉', '芎林鄉', '湖口鄉', '新豐鄉', '尖石鄉', '五峰鄉'\r\n  ],\r\n  '苗栗縣': [\r\n    '苗栗市', '通霄鎮', '苑裡鎮', '竹南鎮', '頭份鎮', '後龍鎮', '卓蘭鎮', '西湖鄉', '頭屋鄉', '公館鄉', '銅鑼鄉', '三義鄉', '造橋鄉', '三灣鄉', '南庄鄉', '大湖鄉', '獅潭鄉', '泰安鄉'\r\n  ],\r\n  '台中市': [\r\n    '中區', '東區', '南區', '西區', '北區', '北屯區', '西屯區', '南屯區', '太平區', '大里區', '霧峰區', '烏日區', '豐原區', '后里區', '石岡區', '東勢區', '和平區', '新社區', '潭子區', '大雅區', '神岡區', '大肚區', '沙鹿區', '龍井區', '梧棲區', '清水區', '大甲區', '外埔區', '大安區'\r\n  ],\r\n  '彰化縣': [\r\n    '彰化市', '員林市', '和美鎮', '鹿港鎮', '溪湖鎮', '二林鎮', '田中鎮', '北斗鎮', '花壇鄉', '芬園鄉', '大村鄉', '永靖鄉', '伸港鄉', '線西鄉', '福興鄉', '秀水鄉', '埔心鄉', '埔鹽鄉', '大城鄉', '芳苑鄉', '竹塘鄉', '社頭鄉', '二水鄉', '田尾鄉', '埤頭鄉', '溪州鄉'\r\n  ],\r\n  '南投縣': [\r\n    '南投市', '埔里鎮', '草屯鎮', '竹山鎮', '集集鎮', '名間鄉', '鹿谷鄉', '中寮鄉', '魚池鄉', '國姓鄉', '水里鄉', '信義鄉', '仁愛鄉'\r\n  ],\r\n  '彰化縣': [\r\n    '彰化市', '員林鎮', '和美鎮', '鹿港鎮', '溪湖鎮', '二林鎮', '田中鎮', '北斗鎮', '花壇鄉', '芬園鄉', '大村鄉', '永靖鄉', '伸港鄉', '線西鄉', '福興鄉', '秀水鄉', '埔心鄉', '埔鹽鄉', '大城鄉', '芳苑鄉', '竹塘鄉', '社頭鄉', '二水鄉', '田尾鄉', '埤頭鄉', '溪州鄉'\r\n  ],\r\n  '雲林縣': [\r\n    '斗六市', '斗南鎮', '虎尾鎮', '西螺鎮', '土庫鎮', '北港鎮', '莿桐鄉', '林內鄉', '古坑鄉', '大埤鄉', '崙背鄉', '二崙鄉', '麥寮鄉', '台西鄉', '東勢鄉', '褒忠鄉', '四湖鄉', '口湖鄉', '水林鄉', '元長鄉'\r\n  ],\r\n  '嘉義縣': [\r\n    '太保市', '朴子市', '布袋鎮', '大林鎮', '民雄鄉', '溪口鄉', '新港鄉', '六腳鄉', '東石鄉', '義竹鄉', '鹿草鄉', '水上鄉', '中埔鄉', '竹崎鄉', '梅山鄉', '番路鄉', '大埔鄉', '阿里山鄉'\r\n  ],\r\n  '嘉義市': [\r\n    '東區', '西區'\r\n  ],\r\n  '台南市': [\r\n    '中西區', '東區', '南區', '北區', '安平區', '安南區', '永康區', '歸仁區', '新化區', '左鎮區', '玉井區', '楠西區', '南化區', '仁德區', '關廟區', '龍崎區', '官田區', '麻豆區', '佳里區', '西港區', '七股區', '將軍區', '學甲區', '北門區', '新營區', '後壁區', '白河區', '東山區', '六甲區', '下營區', '柳營區', '鹽水區', '善化區', '大內區', '山上區', '新市區', '安定區'\r\n  ],\r\n  '高雄市': [\r\n    '楠梓區', '左營區', '鼓山區', '三民區', '鹽埕區', '前金區', '新興區', '苓雅區', '前鎮區', '小港區', '旗津區', '鳳山區', '大寮區', '鳥松區', '林園區', '仁武區', '大樹區', '大社區', '岡山區', '路竹區', '橋頭區', '梓官區', '彌陀區', '永安區', '燕巢區', '田寮區', '阿蓮區', '茄萣區', '湖內區', '旗山區', '美濃區', '內門區', '杉林區', '甲仙區', '六龜區', '茂林區', '桃源區', '那瑪夏區'\r\n  ],\r\n  '屏東縣': [\r\n    '屏東市', '潮州鎮', '東港鎮', '恆春鎮', '萬丹鄉', '長治鄉', '麟洛鄉', '九如鄉', '里港鄉', '鹽埔鄉', '高樹鄉', '萬巒鄉', '內埔鄉', '竹田鄉', '新埤鄉', '枋寮鄉', '新園鄉', '崁頂鄉', '林邊鄉', '南州鄉', '佳冬鄉', '琉球鄉', '車城鄉', '滿州鄉', '枋山鄉', '霧台鄉', '瑪家鄉', '泰武鄉', '來義鄉', '春日鄉', '獅子鄉', '牡丹鄉', '三地門鄉'\r\n  ],\r\n  '宜蘭縣': [\r\n    '宜蘭市', '羅東鎮', '蘇澳鎮', '頭城鎮', '礁溪鄉', '壯圍鄉', '員山鄉', '冬山鄉', '五結鄉', '三星鄉', '大同鄉', '南澳鄉'\r\n  ],\r\n  '花蓮縣': [\r\n    '花蓮市', '鳳林鎮', '玉里鎮', '新城鄉', '吉安鄉', '壽豐鄉', '秀林鄉', '光復鄉', '豐濱鄉', '瑞穗鄉', '萬榮鄉', '富里鄉', '卓溪鄉'\r\n  ],\r\n  '台東縣': [\r\n    '台東市', '成功鎮', '關山鎮', '長濱鄉', '海端鄉', '池上鄉', '東河鄉', '鹿野鄉', '延平鄉', '卑南鄉', '金峰鄉', '大武鄉', '達仁鄉', '綠島鄉', '蘭嶼鄉', '太麻里鄉'\r\n  ],\r\n  '澎湖縣': [\r\n    '馬公市', '湖西鄉', '白沙鄉', '西嶼鄉', '望安鄉', '七美鄉'\r\n  ],\r\n  '金門縣': [\r\n    '金城鎮', '金湖鎮', '金沙鎮', '金寧鄉', '烈嶼鄉', '烏坵鄉'\r\n  ],\r\n  '連江縣': [\r\n    '南竿鄉', '北竿鄉', '莒光鄉', '東引鄉'\r\n  ]\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Button, FilledInput, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, MenuItem, Select, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"../../components/Modal/modal.css\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { GetStore, UpdateStore, RemoveStore, UnbanStore } from \"../../graphQL/Queries\";\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from 'react-places-autocomplete';\r\nimport ConfirmModal from \"../../components/Modal/ConfirmModal\";\r\nimport { areaData } from \"../../data/cityData\";\r\nimport { default_cover_900x300_filename } from \"../../data/strings\";\r\nimport CoverUpload from \"../../components/Upload/CoverUpload\";\r\nimport { getImgURL, replaceNullWithEmptyString } from \"../../utils/Utils\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Error from \"../../components/error/Error\";\r\n\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    name: yup.string().required(\"required\"),\r\n    status: yup.string().required(\"required\"),\r\n    // intro: yup.string().required(\"required\"),\r\n    brandId: yup.string().required(\"required\"),\r\n    brandName: yup.string().required(\"required\"),\r\n    // location_address: yup.string().required(\"required\"),\r\n    principalName: yup.string().required(\"required\"),\r\n    // principalPassword: yup.string().required(\"required\"),\r\n    principalLineUrl: yup.string().required(\"required\"),\r\n    principalEmail: yup.string().email(\"invalid email\"),\r\n});\r\n\r\n\r\nexport default function StoreListModal({ props }) {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [modal, setModal] = useState(false);\r\n    const [status, setStatus] = useState('disable');\r\n    const handleStatusChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    //  ========================== PASSWORD VISIBILITY ==========================\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    var btnTitle = \"修改\", confirmTitle = \"更新\", deleteTitle = \"移除\", banTitle = \"封鎖\", unbanTitle = \"解封\";\r\n\r\n\r\n    // ========================== CITY ==========================\r\n    const [cityFilter, setCityFilter] = useState('');\r\n    const [areaFilter, setAreaFilter] = useState([]); // list of area based on the city\r\n    const [selectedArea, setSelectedArea] = useState(''); // selected area\r\n\r\n    const handleCityChange = (event) => {\r\n        setCityFilter(event.target.value);\r\n        setAreaFilter(areaData[event.target.value]);\r\n        setSelectedArea('');\r\n    };\r\n    const handleAreaChange = (event) => {\r\n        setSelectedArea(event.target.value);\r\n    };\r\n\r\n\r\n    const [inputAddress, setInputAddress] = useState(\"\"); // FOR DISPLAYING WHAT USER TYPE IN ADDRESS SEARCH BAR\r\n    const [{ address, coordinates }, setLocation] = useState({\r\n        address: \"\",\r\n        coordinates: {\r\n            lat: 0,\r\n            lng: 120,\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    const [initialValues, setInitialValues] = useState({\r\n        id: -1,\r\n        brandId: -1,\r\n        brandName: \"\",\r\n        entityName: \"\",\r\n        intro: \"\",\r\n        //locations get from location state\r\n        status: \"\",\r\n\r\n\r\n        principalName: \"\",\r\n        principalAccount: \"\",\r\n        principalPassword: \"\",\r\n        principalLineUrl: \"https://lin.ee/\",\r\n        principalEmail: \"\",\r\n    });\r\n\r\n\r\n    // =================================================================================\r\n    // REMOVE STORE MUTATION\r\n    const [ApolloRemoveStore, { loading, error, data }] = useLazyQuery(RemoveStore);\r\n    useEffect(() => {\r\n        if (data) {\r\n            console.log(\"REMOVE SUCCESS\");\r\n            window.location.reload();\r\n        }\r\n    }, [data]);\r\n\r\n\r\n    //UPDATE STORE MUTATION\r\n    const [ApolloUpdateStore, { loading: loading2, error: error2, data: data2 }] = useLazyQuery(UpdateStore);\r\n    useEffect(() => {\r\n        if (data2) {\r\n            window.location.reload();\r\n            console.log(\"UPDATE SUCCESS\")\r\n        }\r\n    }, [data2]);\r\n\r\n    // INITIAL VALUES FROM GET STORE QUERY\r\n    const { loading: loading3, error: error3, data: data3 } = useQuery(GetStore\r\n        , {\r\n            variables: {\r\n                args: [\r\n                    {\r\n                        id: props.id\r\n                    }\r\n                ],\r\n            }\r\n        }\r\n    );\r\n    useEffect(() => {\r\n        if (data3) {\r\n            // SET THE initial value using data3\r\n            const nonNullData = replaceNullWithEmptyString(data3.getStore[0]);\r\n            setInitialValues({\r\n                id: props.id,\r\n                status: nonNullData.status.name,\r\n                entityName: nonNullData.name,\r\n                intro: nonNullData.intro,\r\n                brandId: nonNullData.brand.id,\r\n                brandName: nonNullData.brand.name,\r\n                // city, district, and address is used in state\r\n                principalName: nonNullData.principal.name,\r\n                principalAccount: nonNullData.principal.account,\r\n                principalEmail: nonNullData.principal.email,\r\n                principalPassword: \"\",\r\n                // princiapall password doesnt receive api data\r\n                principalLineUrl: nonNullData.principal.lineUrl,\r\n            });\r\n\r\n            if (data3.getStore[0].cover !== null || (data3.getStore[0].cover !== \"null\")) {\r\n                setCoverFileName(data3.getStore[0].cover);\r\n            }\r\n\r\n            //set city\r\n            setCityFilter(data3.getStore[0].location.city);\r\n            //set area\r\n            setAreaFilter(areaData[data3.getStore[0].location.city]);\r\n            setSelectedArea(data3.getStore[0].location.district);\r\n            //set location\r\n            setLocation((prevState) => ({\r\n                ...prevState,\r\n                address: data3.getStore[0].location.address,\r\n            }));\r\n            //set status only if not banned\r\n            if (data3.getStore[0].status.name !== \"banned\") {\r\n                setStatus(data3.getStore[0].status.name)\r\n            }\r\n        }\r\n    }, [data3]);\r\n\r\n\r\n\r\n\r\n\r\n    const handleLocationSelect = async value => {\r\n        const results = await geocodeByAddress(value);\r\n        const formattedAddress = results[0].address_components[0].long_name + results[0].address_components[1].long_name;\r\n        const latLng = await getLatLng(results[0]);\r\n        const city = results[0].address_components[4].long_name;\r\n        const district = results[0].address_components[3].long_name;\r\n\r\n        setInputAddress(value);\r\n        setLocation({\r\n            address: formattedAddress,\r\n            coordinates: latLng\r\n        });\r\n\r\n        if (city in areaData) {\r\n            setCityFilter(city); // SET THE CITY FILTER TO THE CITY OF THE SELECTED LOCATION\r\n            // SET THE AREA FILTER TO THE AREA OF THE SELECTED LOCATION\r\n            setAreaFilter(areaData[city]);\r\n            setSelectedArea(district); // SET THE SELECTED AREA TO THE AREA OF THE SELECTED LOCATION\r\n        }\r\n\r\n\r\n        console.log(\"city\" + city + \"district\" + district + \"Coordinate:\" + coordinates.lat + \",\" + coordinates.lng);\r\n        //this.props.onAddressSelected();\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        var result = window.confirm(\"Are you sure you want to delete this store?\");\r\n        if (result) {\r\n            ApolloRemoveStore({\r\n                variables: {\r\n                    args: [\r\n                        {\r\n                            id: props.id\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    // UNBAN MUTATION\r\n    const [ApolloUnBanStore, { loading: loading4, error: error4, data: data4 }] = useLazyQuery(UnbanStore);\r\n    useEffect(() => {\r\n        if (data4) {\r\n            window.location.reload();\r\n        }\r\n    }, [data4]);\r\n    const handleUnBan = (e) => {\r\n        var result = window.confirm(\"Are you sure you want to unban this store?\");\r\n        if (result) {\r\n            ApolloUnBanStore({\r\n                variables: {\r\n                    args: [\r\n                        {\r\n                            id: props.id\r\n                        }\r\n                    ],\r\n                    reason: \"null\"\r\n                }\r\n            })\r\n            console.log(\"unbaned\");\r\n        }\r\n    }\r\n\r\n\r\n    const [coverFileName, setCoverFileName] = useState(default_cover_900x300_filename);\r\n    const handleUploadCoverSucess = (name) => {\r\n        setCoverFileName(name);\r\n    };\r\n\r\n\r\n    const handleFormSubmit = (values) => {\r\n        const variables = {\r\n            args: [\r\n                {\r\n                    id: values.id\r\n                }\r\n            ],\r\n            name: values.name,\r\n            cover: coverFileName,\r\n            location: {\r\n                city: cityFilter,\r\n                district: selectedArea,\r\n                address: address,\r\n                description: \"NONE\"\r\n            },\r\n            principal: {\r\n                name: values.principalName,\r\n                lineUrl: values.principalLineUrl,\r\n            }\r\n        };\r\n\r\n        if (values.intro !== \"\") {\r\n            variables.intro = values.intro;\r\n        }\r\n        if (values.principalEmail !== \"\") {\r\n            variables.principal.email = values.principalEmail;\r\n        }\r\n\r\n\r\n        // if coordinate is not updated\r\n        if (coordinates.lat !== 0 && coordinates.lng !== 120) {\r\n            variables.location.coordinate = {\r\n                latitude: coordinates.lat,\r\n                longitude: coordinates.lng,\r\n            };\r\n        }\r\n\r\n        //if password is empty, dont update password\r\n        if (values.principalPassword !== \"\") {\r\n            variables.principal.password = values.principalPassword;\r\n        }\r\n\r\n        //if status is not banned, update status\r\n        if (initialValues.status !== \"banned\") {\r\n            variables.statusId = status;\r\n        }\r\n        ApolloUpdateStore({ variables });\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n    };\r\n    if (modal) {\r\n        document.body.classList.add('active-modal')\r\n    } else {\r\n        document.body.classList.remove('active-modal')\r\n    }\r\n\r\n\r\n    if (loading) return <Loader />;\r\n    if (error) return <Error />;\r\n\r\n    return (\r\n        <>\r\n            {/* THE CONTENT OF THE BUTTON */}\r\n            <Button onClick={toggleModal} className=\"btn-modal\" sx={{ color: colors.primary[100], border: \"1px solid #111\", borderColor: colors.blueAccent[100] }}>{btnTitle}</Button>\r\n\r\n            {/* CONTENT OF WHAT HAPPEN AFTER BUTTON CLICKED */}\r\n            {modal && (\r\n                <Box className=\"modal\">\r\n                    <Box onClick={toggleModal} className=\"overlay\"></Box>\r\n                    <Box className=\"modal-content\" backgroundColor={colors.primary[500]}>\r\n                        <Box m=\"20px\">\r\n                            <Formik\r\n                                onSubmit={handleFormSubmit}\r\n                                initialValues={initialValues}\r\n                                validationSchema={checkoutSchema}\r\n                            >\r\n                                {({\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleBlur,\r\n                                    handleChange,\r\n                                    handleSubmit,\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Box >\r\n\r\n                                            <Box display={\"flex\"} m={\"1rem 0\"}>\r\n                                                <Box width={\"35%\"} display={\"flex\"} flexDirection={\"column\"} justifyContent={\"center\"}>\r\n                                                    <Typography variant=\"h2\" sx={{ mb: \"10px\", fontSize: \"2rem\", fontWeight: \"600\", color: \"white\" }}>\r\n                                                        {btnTitle}\r\n                                                    </Typography>\r\n\r\n                                                    <Box textAlign=\"center\" display={\"flex\"} >\r\n                                                        {(() => {\r\n                                                            if (initialValues.status === \"disable\") {\r\n                                                                return (\r\n                                                                    <Typography variant=\"h5\" color={colors.primary[100]} >\r\n                                                                        停用\r\n                                                                    </Typography>)\r\n                                                            }\r\n                                                            if (initialValues.status === \"banned\") {\r\n                                                                return (\r\n                                                                    <Typography variant=\"h5\" color={colors.redAccent[500]}>\r\n                                                                        封鎖\r\n                                                                    </Typography>)\r\n                                                            }\r\n                                                            else {\r\n                                                                return (\r\n                                                                    <Typography variant=\"h5\" color={colors.greenAccent[500]}>\r\n                                                                        正常\r\n                                                                    </Typography>)\r\n                                                            }\r\n                                                        })()}\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                                <Box width={\"65%\"}>\r\n                                                    {/* UPLOAD COVER COMPONENET */}\r\n                                                    <CoverUpload handleSuccess={handleUploadCoverSucess} imagePlaceHolder={getImgURL(coverFileName, \"cover\")} type={\"store\"} />\r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                                                <TextField className=\"modal_input_textfield\"\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"暱稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.name}\r\n                                                    name=\"name\"\r\n                                                    error={!!touched.name && !!errors.name}\r\n                                                    helperText={touched.name && errors.name}\r\n                                                    sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                />\r\n                                                <TextField className=\"modal_input_textfield\"\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"介紹 (選填)\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.intro}\r\n                                                    name=\"intro\"\r\n                                                    error={!!touched.intro && !!errors.intro}\r\n                                                    helperText={touched.intro && errors.intro}\r\n                                                    sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                />\r\n                                                { }\r\n                                                <FormControl sx={{ minWidth: 150 }} >\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >{initialValues.status}</InputLabel>\r\n                                                    <Select\r\n                                                        disabled={initialValues.status === \"banned\"}\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400] }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={status}\r\n                                                        label=\"status\"\r\n                                                        onChange={handleStatusChange}\r\n                                                    >\r\n                                                        <MenuItem value={\"normal\"}>正常</MenuItem>\r\n                                                        <MenuItem value={\"disable\"}>停用</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Box>\r\n\r\n                                            <Box display={\"flex\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    disabled={true}\r\n                                                    type=\"text\"\r\n                                                    label=\"品牌id\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.brandId}\r\n                                                    name=\"brandId\"\r\n                                                    error={!!touched.brandId && !!errors.brandId}\r\n                                                    helperText={touched.brandId && errors.brandId}\r\n                                                    sx={{ marginBottom: \"1rem\", mr: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    disabled={true}\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"品牌名稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.brandName}\r\n                                                    name=\"brandName\"\r\n                                                    error={!!touched.brandName && !!errors.brandName}\r\n                                                    helperText={touched.brandName && errors.brandName}\r\n                                                    sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                            </Box>\r\n\r\n                                            <PlacesAutocomplete\r\n                                                className=\"places_autocomplete\"\r\n                                                value={inputAddress}\r\n                                                onChange={setInputAddress}\r\n                                                onSelect={handleLocationSelect}\r\n                                            >\r\n                                                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                                    <div>\r\n                                                        <TextField\r\n                                                            className=\"modal_input_textfield\"\r\n                                                            fullWidth\r\n                                                            label=\"搜索店面地點 ...\"\r\n                                                            variant=\"filled\"\r\n                                                            type=\"text\"\r\n                                                            sx={{ mb: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                            {...getInputProps({\r\n                                                                placeholder: '搜索店面地點 ...',\r\n                                                                className: 'location-search-input',\r\n                                                            })}\r\n                                                        />\r\n                                                        <div className=\"autocomplete-dropdown-container\">\r\n                                                            {loading && <div>Loading...</div>}\r\n                                                            {suggestions.map(suggestion => {\r\n                                                                const className = suggestion.active\r\n                                                                    ? 'suggestion-item--active'\r\n                                                                    : 'suggestion-item';\r\n                                                                // inline style for demonstration purpose\r\n                                                                const style = suggestion.active\r\n                                                                    ? { backgroundColor: colors.primary[500], color: colors.grey[300], cursor: 'pointer', borderRadius: '5px', fontSize: '1rem', padding: '0.5rem', margin: \"0.5rem\" } //color when hover\r\n                                                                    : { backgroundColor: colors.primary[400], color: colors.grey[300], cursor: 'pointer', borderRadius: '5px', fontSize: '1rem', padding: '0.5rem', margin: \"0.5rem\" }; //background color\r\n                                                                return (\r\n                                                                    <div\r\n                                                                        {...getSuggestionItemProps(suggestion, {\r\n                                                                            className,\r\n                                                                            style,\r\n                                                                        })}\r\n                                                                    >\r\n                                                                        <span>{suggestion.description}</span>\r\n                                                                    </div>\r\n                                                                );\r\n                                                            })}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </PlacesAutocomplete>\r\n\r\n                                            {/* STORE ADDRESS */}\r\n                                            <Box display={\"flex\"}>\r\n                                                <FormControl sx={{ minWidth: 150, height: \"100%\" }}>\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >縣市過濾</InputLabel>\r\n                                                    <Select\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400], height: \"100%\", width: \"auto\", mr: \"1rem\" }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={cityFilter}\r\n                                                        label=\"cityFilter\"\r\n                                                        onChange={handleCityChange}\r\n                                                        required // add the required prop\r\n                                                    >\r\n                                                        {Object.keys(areaData).map((city, i) => (\r\n                                                            <MenuItem value={city} key={`${city}-${i}`}>\r\n                                                                {city}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n\r\n                                                <FormControl sx={{ minWidth: 150, height: \"100%\" }}>\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >鄉鎮過濾</InputLabel>\r\n                                                    <Select\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400], height: \"100%\", width: \"auto\", mr: \"1rem\" }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={selectedArea}\r\n                                                        label=\"areaFilter\"\r\n                                                        onChange={handleAreaChange}\r\n                                                        required // add the required prop\r\n                                                    >\r\n                                                        {areaFilter.map((area, i) => (\r\n                                                            <MenuItem value={area} key={area}>\r\n                                                                {area}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"店面地址\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={address}\r\n                                                    name=\"address\"\r\n                                                    required // add the required prop\r\n                                                    error={!!touched.address && !!errors.address}\r\n                                                    helperText={touched.address && errors.address}\r\n                                                    sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                            </Box>\r\n\r\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人名稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalName}\r\n                                                    name=\"principalName\"\r\n                                                    error={!!touched.principalName && !!errors.principalName}\r\n                                                    helperText={touched.principalName && errors.principalName}\r\n                                                    sx={{ marginBottom: \"1rem\", mr: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人line\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalLineUrl}\r\n                                                    name=\"principalLineUrl\"\r\n                                                    error={!!touched.principalLineUrl && !!errors.principalLineUrl}\r\n                                                    helperText={touched.principalLineUrl && errors.principalLineUrl}\r\n                                                    sx={{ margin: \" 0 0 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人信箱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalEmail}\r\n                                                    name=\"principalEmail\"\r\n                                                    error={!!touched.principalEmail && !!errors.principalEmail}\r\n                                                    helperText={touched.principalEmail && errors.principalEmail}\r\n                                                    sx={{ margin: \" 0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                {/* PASSWORD INPUT */}\r\n                                                <FormControl fullWidth variant=\"filled\" sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }} >\r\n                                                    <InputLabel htmlFor=\"filled-adornment-password\">負責人密碼 (不必要)</InputLabel>\r\n                                                    <FilledInput\r\n                                                        onBlur={handleBlur}\r\n                                                        onChange={handleChange}\r\n                                                        value={values.principalPassword}\r\n                                                        name=\"principalPassword\"\r\n                                                        error={!!touched.principalPassword && !!errors.principalPassword}\r\n                                                        type={showPassword ? 'text' : 'password'}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                    <FormHelperText\r\n                                                        error={!!touched.principalPassword && !!errors.principalPassword}>\r\n                                                        {touched.principalPassword && errors.principalPassword}\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </Box>\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" justifyContent=\"center\" >\r\n                                            <Button onClick={handleDelete} variant=\"contained\" sx={{ minWidth: \"100px\", padding: \".5rem 1.5rem\", margin: \"0 1rem\", borderRadius: \"10px\", border: \"2px solid #ff2f00\" }}>\r\n                                                <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: \"white\" }}>\r\n                                                    {deleteTitle}\r\n                                                </Typography>\r\n                                            </Button>\r\n\r\n                                            {values.status === \"banned\" ? (\r\n                                                <Button onClick={handleUnBan} id={values.id} variant=\"contained\" sx={{ minWidth: \"100px\", padding: \".5rem 1.5rem\", margin: \"0 1rem\", borderRadius: \"10px\", border: \"2px solid #fff\" }}>\r\n                                                    <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: \"white\" }}>\r\n                                                        {unbanTitle}\r\n                                                    </Typography>\r\n                                                </Button>\r\n                                            ) : (\r\n                                                <ConfirmModal props={{ type: \"store\", id: props.id }} />\r\n                                            )}\r\n\r\n                                            <Button type=\"submit\" color=\"success\" variant=\"contained\" sx={{ minWidth: \"100px\", padding: \".5rem 1.5rem\", margin: \"0 1rem\", borderRadius: \"10px\", background: colors.grey[100] }}>\r\n                                                <Typography variant=\"h5\" sx={{ textAlign: \"center\", fontSize: \".9rem\", color: colors.grey[700] }}>\r\n                                                    {confirmTitle}\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        </Box >\r\n                    </Box>\r\n                </Box>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n\r\n\r\n\r\n}\r\n","import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Button, FilledInput, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, MenuItem, Select, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"../../components/Modal/modal.css\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { CreateStore } from \"../../graphQL/Queries\";\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    geocodeByPlaceId,\r\n    getLatLng,\r\n} from 'react-places-autocomplete';\r\nimport { GetBrandList } from \"../../graphQL/Queries\";\r\nimport { areaData } from \"../../data/cityData\";\r\nimport { defaultCoverURL, default_cover_900x300_filename } from \"../../data/strings\";\r\nimport CoverUpload from \"../../components/Upload/CoverUpload\";\r\nimport { getImgURL } from \"../../utils/Utils\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\n\r\nconst passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d_!@#]{6,}$/;\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    name: yup.string().required(\"required\"),\r\n\r\n    principalName: yup.string().required(\"required\"),\r\n    principalAccount: yup.string().required(\"required\"),\r\n    principalPassword: yup.string().required(\"required\").matches(passwordRegex),\r\n    principalLineUrl: yup.string().required(\"required\"),\r\n    principalEmail: yup.string().email(\"invalid email\"),\r\n});\r\n\r\n\r\nexport default function CreateStoreModal() {\r\n    const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n\r\n\r\n\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n\r\n    // ========================== STATE ==========================\r\n    const [modal, setModal] = useState(false);\r\n\r\n\r\n    //  ========================== PASSWORD VISIBILITY ==========================\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const [{ brandId, brandName }, setBrandInfo] = useState({\r\n        brandId: \"null\",\r\n        brandName: \"null\",\r\n    });\r\n    var btnTitle = \"新增店面\", confirmTitle = \"新增\", cancelTitle = \"取消\";\r\n\r\n\r\n    // ========================== CITY ==========================\r\n    const [cityFilter, setCityFilter] = useState('');\r\n    const [areaFilter, setAreaFilter] = useState([]); // list of area based on the city\r\n    const [selectedArea, setSelectedArea] = useState(''); // selected area\r\n\r\n    const handleCityChange = (event) => {\r\n        setCityFilter(event.target.value);\r\n        setAreaFilter(areaData[event.target.value]);\r\n        setSelectedArea('');\r\n    };\r\n    const handleAreaChange = (event) => {\r\n        setSelectedArea(event.target.value);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"city:\" + cityFilter + \", selected area:\" + selectedArea);\r\n    // }, [cityFilter, areaFilter, selectedArea]);\r\n\r\n\r\n    const [inputAddress, setInputAddress] = useState(\"\"); // FOR DISPLAYING WHAT USER TYPE IN ADDRESS SEARCH BAR\r\n    const [{ address, coordinates }, setLocation] = useState({\r\n        address: \"\",\r\n        coordinates: {\r\n            lat: 0,\r\n            lng: 120,\r\n        }\r\n    });\r\n\r\n    const handleLocationSelect = async value => {\r\n        const results = await geocodeByAddress(value);\r\n        const formattedAddress = results[0].address_components[0].long_name + results[0].address_components[1].long_name;\r\n        const latLng = await getLatLng(results[0]);\r\n        const city = results[0].address_components[4].long_name;\r\n        const district = results[0].address_components[3].long_name;\r\n\r\n        setInputAddress(value);\r\n        setLocation({\r\n            address: formattedAddress,\r\n            coordinates: latLng\r\n        });\r\n\r\n        if (city in areaData) {\r\n            setCityFilter(city); // SET THE CITY FILTER TO THE CITY OF THE SELECTED LOCATION\r\n            // SET THE AREA FILTER TO THE AREA OF THE SELECTED LOCATION\r\n            setAreaFilter(areaData[city]);\r\n            setSelectedArea(district); // SET THE SELECTED AREA TO THE AREA OF THE SELECTED LOCATION\r\n        }\r\n\r\n\r\n        console.log(\"city\" + city + \"district\" + district + \"Coordinate:\" + coordinates.lat + \",\" + coordinates.lng);\r\n        //this.props.onAddressSelected();\r\n    };\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        intro: \"\",\r\n\r\n        //locations get from location state\r\n        principalName: \"\",\r\n        principalAccount: \"\",\r\n        principalPassword: \"\",\r\n        principalLineUrl: \"https://lin.ee/\",\r\n        principalEmail: \"\",\r\n    };\r\n\r\n    // =================== BRAND LIST ===================\r\n    const { loading: loading1, error: error1, data: data1 } = useQuery(GetBrandList);\r\n    const [brandListFilter, setBrandListFilter] = useState('');\r\n    const [brandList, setBrandList] = useState([]);\r\n    useEffect(() => {\r\n        if (data1) {\r\n            setBrandList(data1.managerGetBrands);\r\n        }\r\n\r\n    }, [data1]);\r\n    const handleBrandListChange = (e) => {\r\n        const targetId = e.target.value;\r\n\r\n        //find the brand id from brand list\r\n        const brand = brandList.find(brand => brand.id === targetId);\r\n\r\n        if (brand) {\r\n            setBrandListFilter(targetId);\r\n            setBrandInfo({\r\n                brandId: targetId,\r\n                brandName: brand.name\r\n            });\r\n        }\r\n    };\r\n\r\n    //============================================ GQL ==================================================\r\n    //create store\r\n    const [ApolloCreateStore, { loading, error, data }] = useLazyQuery(CreateStore);\r\n    useEffect(() => {\r\n        if (data) {\r\n            window.location.reload();\r\n        }\r\n    }, [data]);\r\n\r\n\r\n    const [coverFileName, setCoverFileName] = useState(default_cover_900x300_filename);\r\n    const handleUploadCoverSucess = (name) => {\r\n        setCoverFileName(name);\r\n    };\r\n\r\n    const handleFormSubmit = (values) => {\r\n        const variables = {\r\n            args: [\r\n                {\r\n                    id: brandId\r\n                }\r\n            ],\r\n            brandId: brandId,\r\n            name: values.name,\r\n            cover: coverFileName,\r\n            location: {\r\n                city: cityFilter,\r\n                district: selectedArea,\r\n                address: address,\r\n                coordinate: {\r\n                    latitude: coordinates.lat,\r\n                    longitude: coordinates.lng\r\n                },\r\n                // description: \"location description\"\r\n            },\r\n            principal: {\r\n                name: values.principalName,\r\n                account: values.principalAccount,\r\n                password: values.principalPassword,\r\n                lineUrl: values.principalLineUrl,\r\n            }\r\n        }\r\n        if (values.intro !== \"\") {\r\n            variables.intro = values.intro;\r\n        }\r\n        if (values.principalEmail !== \"\") {\r\n            variables.principal.email = values.principalEmail;\r\n        }\r\n\r\n        console.log(variables);\r\n        ApolloCreateStore({ variables });\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n    };\r\n\r\n    if (modal) {\r\n        document.body.classList.add('active-modal')\r\n    } else {\r\n        document.body.classList.remove('active-modal')\r\n    }\r\n    return (\r\n        <>\r\n            {/* THE CONTENT OF THE BUTTON */}\r\n\r\n            <Button onClick={toggleModal} className=\"btn-modal\" sx={{ color: colors.primary[100], border: \"1px solid #111\", borderColor: colors.blueAccent[100] }}>{btnTitle}</Button>\r\n\r\n            {/* CONTENT OF WHAT HAPPEN AFTER BUTTON CLICKED */}\r\n            {modal && (\r\n                <Box className=\"modal\">\r\n                    <Box onClick={toggleModal} className=\"overlay\"></Box>\r\n                    <Box className=\"modal-content\" backgroundColor={colors.primary[500]}>\r\n                        <Box m=\"20px\">\r\n\r\n\r\n                            <Formik\r\n                                onSubmit={handleFormSubmit}\r\n                                initialValues={initialValues}\r\n                                validationSchema={checkoutSchema}\r\n                            >\r\n                                {({\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleBlur,\r\n                                    handleChange,\r\n                                    handleSubmit,\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Box>\r\n                                            <Box display={\"flex\"} m={\"1rem 0\"}>\r\n                                                <Box width={\"35%\"} display={\"flex\"} flexDirection={\"column\"} justifyContent={\"center\"}>\r\n                                                    <Typography variant=\"h2\" sx={{ textAlign: \"left\", fontSize: \"2rem\", fontWeight: \"600\", color: \"white\" }}>\r\n                                                        {btnTitle}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box width={\"65%\"}>\r\n                                                    {/* UPLOAD COVER COMPONENET */}\r\n                                                    <CoverUpload handleSuccess={handleUploadCoverSucess} imagePlaceHolder={getImgURL(coverFileName, \"cover\")} type={\"store\"} />\r\n                                                </Box>\r\n                                            </Box>\r\n\r\n\r\n                                            {/* Brand info */}\r\n                                            <Box display={\"flex\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    disabled={true}\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"品牌id\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={brandId}\r\n                                                    name=\"brandId\"\r\n                                                    error={!!touched.brandId && !!errors.brandId}\r\n                                                    helperText={touched.brandId && errors.brandId}\r\n                                                    sx={{ marginBottom: \"1rem\", mr: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    disabled={true}\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"品牌名稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={brandName}\r\n                                                    name=\"brandName\"\r\n                                                    error={!!touched.brandName && !!errors.brandName}\r\n                                                    helperText={touched.brandName && errors.brandName}\r\n                                                    sx={{ marginBottom: \"1rem\", mr: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                <FormControl sx={{ minWidth: 150, height: \"100%\" }}>\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >品牌過濾</InputLabel>\r\n                                                    <Select\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400], height: \"100%\", width: \"auto\" }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={brandListFilter}\r\n                                                        label=\"brandListFilter\"\r\n                                                        onChange={handleBrandListChange}\r\n                                                        required\r\n                                                    >\r\n                                                        {brandList.map((brand, i) => (\r\n                                                            <MenuItem\r\n                                                                value={brand.id}\r\n                                                                key={`${i}`}\r\n                                                            >\r\n                                                                {brand.id} - {brand.name}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Box>\r\n\r\n\r\n                                            <TextField className=\"modal_input_textfield\"\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"暱稱 (選填)\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.name}\r\n                                                name=\"name\"\r\n                                                error={!!touched.name && !!errors.name}\r\n                                                helperText={touched.name && errors.name}\r\n                                                sx={{ margin: \"0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                            />\r\n                                            <TextField className=\"modal_input_textfield\"\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                type=\"text\"\r\n                                                label=\"店面介紹\"\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                value={values.intro}\r\n                                                name=\"intro\"\r\n                                                error={!!touched.intro && !!errors.intro}\r\n                                                helperText={touched.intro && errors.intro}\r\n                                                sx={{ margin: \"0 1rem 0rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                            />\r\n\r\n                                            {/* Search Store location */}\r\n                                            <PlacesAutocomplete\r\n                                                className=\"places_autocomplete\"\r\n                                                value={inputAddress}\r\n                                                onChange={setInputAddress}\r\n                                                onSelect={handleLocationSelect}\r\n                                            >\r\n                                                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                                    <div>\r\n                                                        <TextField\r\n                                                            className=\"modal_input_textfield\"\r\n                                                            fullWidth\r\n                                                            label=\"搜索店面地點 ...\"\r\n                                                            variant=\"filled\"\r\n                                                            type=\"text\"\r\n                                                            sx={{ margin: \"1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\", color: \"black\" }}\r\n                                                            {...getInputProps({\r\n                                                                placeholder: '搜索店面地點 ...',\r\n                                                                className: 'location-search-input',\r\n                                                            })}\r\n                                                        />\r\n                                                        <div className=\"autocomplete-dropdown-container\">\r\n                                                            {loading && <div>Loading...</div>}\r\n                                                            {suggestions.map((suggestion, index) => {\r\n                                                                const className = suggestion.active\r\n                                                                    ? 'suggestion-item--active'\r\n                                                                    : 'suggestion-item';\r\n                                                                // inline style for demonstration purpose\r\n                                                                const style = suggestion.active\r\n                                                                    ? { backgroundColor: colors.primary[500], color: colors.grey[300], cursor: 'pointer', borderRadius: '5px', fontSize: '1rem', padding: '0.5rem', margin: \"0.5rem\" } //color when hover\r\n                                                                    : { backgroundColor: colors.primary[400], color: colors.grey[300], cursor: 'pointer', borderRadius: '5px', fontSize: '1rem', padding: '0.5rem', margin: \"0.5rem\" }; //background color\r\n                                                                return (\r\n                                                                    <div\r\n                                                                        key={index} // add a unique key prop\r\n                                                                        {...getSuggestionItemProps(suggestion, {\r\n                                                                            className,\r\n                                                                            style,\r\n                                                                        })}\r\n                                                                    >\r\n                                                                        <span>{suggestion.description}</span>\r\n                                                                    </div>\r\n                                                                );\r\n                                                            })}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </PlacesAutocomplete>\r\n\r\n\r\n\r\n                                            {/* STORE ADDRESS */}\r\n                                            <Box display={\"flex\"}>\r\n                                                {/* CITYFILTER */}\r\n                                                <FormControl sx={{ minWidth: 150, height: \"100%\" }}>\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >縣市過濾</InputLabel>\r\n                                                    <Select\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400], height: \"100%\", width: \"auto\", mr: \"1rem\" }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={cityFilter}\r\n                                                        label=\"cityFilter\"\r\n                                                        onChange={handleCityChange}\r\n                                                        required // add the required prop\r\n                                                    >\r\n                                                        {Object.keys(areaData).map((city, i) => (\r\n                                                            <MenuItem value={city} key={`${city}-${i}`}>\r\n                                                                {city}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n\r\n                                                <FormControl sx={{ minWidth: 150, height: \"100%\" }}>\r\n                                                    <InputLabel id=\"demo-simple-select-label\" >鄉鎮過濾</InputLabel>\r\n                                                    <Select\r\n                                                        sx={{ borderRadius: \"10px\", background: colors.primary[400], height: \"100%\", width: \"auto\", mr: \"1rem\" }}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={selectedArea}\r\n                                                        label=\"areaFilter\"\r\n                                                        onChange={handleAreaChange}\r\n                                                        required // add the required prop\r\n                                                    >\r\n                                                        {areaFilter.map((area, i) => (\r\n                                                            <MenuItem value={area} key={area}>\r\n                                                                {area}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"店面地址\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={address}\r\n                                                    name=\"address\"\r\n                                                    required // add the required prop\r\n                                                    error={!!touched.address && !!errors.address}\r\n                                                    helperText={touched.address && errors.address}\r\n                                                    sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                            </Box>\r\n\r\n                                            <Box display={\"flex\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人名稱\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalName}\r\n                                                    name=\"principalName\"\r\n                                                    error={!!touched.principalName && !!errors.principalName}\r\n                                                    helperText={touched.principalName && errors.principalName}\r\n                                                    sx={{ margin: \" 0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人賬號\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalAccount}\r\n                                                    name=\"principalAccount\"\r\n                                                    error={!!touched.principalAccount && !!errors.principalAccount}\r\n                                                    helperText={touched.principalAccount && errors.principalAccount}\r\n                                                    sx={{ margin: \" 0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n\r\n                                                {/* PASSWORD INPUT */}\r\n                                                <FormControl fullWidth variant=\"filled\" sx={{ marginBottom: \"1rem\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }} >\r\n                                                    <InputLabel htmlFor=\"filled-adornment-password\">負責人密碼 (不必要)</InputLabel>\r\n                                                    <FilledInput\r\n                                                        onBlur={handleBlur}\r\n                                                        onChange={handleChange}\r\n                                                        value={values.principalPassword}\r\n                                                        name=\"principalPassword\"\r\n                                                        error={!!touched.principalPassword && !!errors.principalPassword}\r\n                                                        type={showPassword ? 'text' : 'password'}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    onClick={handleClickShowPassword}\r\n                                                                    onMouseDown={handleMouseDownPassword}\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                    <FormHelperText error={!!touched.principalPassword && !!errors.principalPassword}>\r\n                                                        {touched.principalPassword && errors.principalPassword}\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </Box>\r\n\r\n                                            <Box display={\"flex\"}>\r\n\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人信箱 (選填)\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalEmail}\r\n                                                    name=\"principalEmail\"\r\n                                                    error={!!touched.principalEmail && !!errors.principalEmail}\r\n                                                    helperText={touched.principalEmail && errors.principalEmail}\r\n                                                    sx={{ margin: \" 0 1rem 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    variant=\"filled\"\r\n                                                    type=\"text\"\r\n                                                    label=\"負責人line\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.principalLineUrl}\r\n                                                    name=\"principalLineUrl\"\r\n                                                    error={!!touched.principalLineUrl && !!errors.principalLineUrl}\r\n                                                    helperText={touched.principalLineUrl && errors.principalLineUrl}\r\n                                                    sx={{ margin: \" 0 0 1rem 0\", backgroundColor: colors.primary[400], borderRadius: \"5px\" }}\r\n                                                />\r\n                                            </Box>\r\n                                        </Box>\r\n                                        <Box display=\"flex\" justifyContent=\"center\" >\r\n                                            <Box display=\"flex\" justifyContent=\"center\" >\r\n                                                <button className=\"my-button\" type=\"submit\">{confirmTitle}</button>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        </Box >\r\n                    </Box>\r\n                </Box>\r\n            )\r\n            }\r\n        </>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// QUERIES\r\nimport { useQuery } from '@apollo/client'\r\nimport { GetAllStores } from '../../graphQL/Queries'\r\n\r\n// THEME\r\nimport { Box, Button, FormControl, InputLabel, MenuItem, Select, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\n\r\n// ICONS\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\n// COMPONENETS\r\nimport { citiesData } from \"../../data/mockData\";\r\nimport StoreListModal from './StoreListModal';\r\nimport CreateStoreModal from './CreateStoreModal'\r\nimport Pagination from '../../components/Pagination';\r\nimport Refresh from '../../components/Refresh';\r\nimport Loader from '../../components/loader/Loader';\r\nimport Error from '../../components/error/Error';\r\n\r\n\r\nconst StoreManagement = () => {\r\n    //THEME\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n\r\n    // STATES\r\n    const [searchFilter, setSearchFilter] = useState('');\r\n    const [cityFilter, setCityFilter] = useState('');\r\n    const handleCityChange = (e) => {\r\n        setCityFilter(e.target.value);\r\n    };\r\n\r\n\r\n    //REF\r\n    const brandRef = useRef('');\r\n    const searchRef = useRef('');\r\n\r\n    // PAGINATION\r\n    const [limit, setLimit] = useState(10);\r\n    const [offset, setOffset] = useState(0);\r\n    const handlePageChange = ({ limit, offset }) => {\r\n        setLimit(limit);\r\n        setOffset(offset);\r\n    }\r\n\r\n    //FUNCTIONS\r\n    const handleSearchChange = (e) => {\r\n        setSearchFilter(e.target.value);\r\n    };\r\n\r\n\r\n    const submitSearch = () => {\r\n        console.log(brandRef.current.value + \" \" + searchRef.current.value + searchFilter + cityFilter);\r\n        //CALL SEARCH FUNCTION\r\n        let brandValue = brandRef.current.value;\r\n        let storeValue = searchRef.current.value;\r\n        if (brandValue.length > 2 && storeValue.length === 0) {\r\n            let search = brandArraySearch(stores, brandValue);\r\n            setStores(search)\r\n        }\r\n        else if (brandValue.length === 0 && storeValue.length > 2) {\r\n            let search = storeArraySearch(stores, storeValue);\r\n            setStores(search)\r\n        }\r\n        else { //IF SEARCH VALUE IS LESS THAN 3 CHARACTERS, RESET BRANDS TO INIT BRANDS\r\n            setStores(initStores)\r\n        }\r\n    }\r\n\r\n    //BRAND SEARCH FUNCTION\r\n    const brandArraySearch = (array, keyword) => {\r\n        const searchTerm = keyword\r\n\r\n        return array.filter(value => {\r\n            return value.brand.name.match(new RegExp(searchTerm, 'g'))\r\n        })\r\n    }\r\n\r\n    // STORE SEARCH FUNCTION\r\n    const storeArraySearch = (array, keyword) => {\r\n        console.log(array, keyword);\r\n        console.log()\r\n        const searchTerm = keyword\r\n\r\n        return array.filter(value => {\r\n            return value.name.match(new RegExp(searchTerm, 'g'))\r\n        })\r\n    }\r\n\r\n    //GQL\r\n    const { loading, error, data } = useQuery(GetAllStores, {\r\n        variables: { limit, offset }\r\n    });\r\n    const [initStores, SetInitStores] = useState([]);\r\n    const [stores, setStores] = useState([]);\r\n    useEffect(() => {\r\n        if (data) {\r\n            setStores(data.managerGetStores);\r\n            SetInitStores(data.managerGetStores);\r\n        }\r\n    }, [data]);\r\n\r\n    if (loading) return <Loader />;\r\n    if (error) return <Error />;\r\n\r\n    return (\r\n        <Box p={2} position=\"flex\" flexDirection={\"column\"}>\r\n            <Box height={\"10%\"}>\r\n                <h1 className='userManagement_title'>店面管理</h1>\r\n            </Box>\r\n\r\n            {/* SEARCH DIV */}\r\n            <Box className='flex_media' marginBottom={\"2rem\"} height={\"10%\"} alignItems={\"center\"}>\r\n                {/* name Search */}\r\n                <Box\r\n                    display=\"flex\"\r\n                    backgroundColor={colors.primary[400]}\r\n                    borderRadius=\"10px\"\r\n                    height={\"52px\"}\r\n                    maxWidth={120}>\r\n                    <InputBase sx={{ ml: 2, pr: 2, flex: 1, minWidth: \"200px\" }} placeholder=\"品牌名\" inputRef={brandRef} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    backgroundColor={colors.primary[400]}\r\n                    borderRadius=\"10px\"\r\n                    height={\"52px\"}\r\n                    maxWidth={140}>\r\n                    <InputBase sx={{ m: \"0 1rem\", height: \"100%\" }} placeholder=\"店面名\" inputRef={searchRef} />\r\n                </Box>\r\n                <FormControl sx={{ width: 120 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\" >縣市過濾</InputLabel>\r\n                    <Select\r\n                        sx={{ borderRadius: \"10px\", background: colors.primary[400], height: \"100%\", width: \"auto\" }}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={cityFilter}\r\n                        label=\"cityFilter\"\r\n                        onChange={handleCityChange}\r\n                    >\r\n                        {citiesData.map((city, i) => (\r\n                            <MenuItem\r\n                                value={city.name}\r\n                                key={`${city.id}-${i}`}\r\n                            >\r\n                                {city.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                {/* SEARCH BTN */}\r\n                <Button sx={{\r\n                    backgroundColor: colors.primary[300],\r\n                    color: colors.grey[100],\r\n                    minWidth: \"120px\",\r\n                    height: \"52px\",\r\n                    borderRadius: \"10px\",\r\n                    ':hover': {\r\n                        bgcolor: colors.primary[300],\r\n                        border: '1px solid white',\r\n                    }\r\n                }}\r\n                    onClick={submitSearch}>\r\n                    <SearchIcon sx={{ mr: \"10px\", fontsize: \".8rem\", color: \"white\" }} />\r\n                    <Typography color={\"white\"} variant=\"h5\" fontWeight=\"500\">\r\n                        查詢\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Box\r\n                    display=\"flex\"\r\n                    backgroundColor={colors.primary[400]}\r\n                    borderRadius=\"10px\"\r\n                    marginLeft={\"auto\"}\r\n                    padding={\"0\"}\r\n                    height={\"52px\"}\r\n                >\r\n                    <CreateStoreModal />\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n            {/* TABLE DIV */}\r\n            <Box\r\n                backgroundColor={colors.primary[400]}\r\n                borderRadius=\"10px\"\r\n                height={\"50%\"}\r\n            >\r\n                {/* PAGINATION & REFRESH DIV */}\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    borderBottom={`0px solid ${colors.primary[500]}`}\r\n                    colors={colors.grey[100]}\r\n                    p=\"15px\"\r\n                >\r\n                    <Box width={\"90%\"}>\r\n                        {/* pagination */}\r\n                        <Pagination\r\n                            limit={limit}\r\n                            offset={offset}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box width={\"10%\"}>\r\n                        {/* refresh button */}\r\n                        <Refresh\r\n                            limit={limit}\r\n                            offset={offset}\r\n                            onPageChange={handlePageChange} />\r\n                    </Box>\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                    borderBottom={`4px solid ${colors.primary[500]}`}\r\n                    colors={colors.grey[100]}\r\n                    p=\"10px\"\r\n                >\r\n\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">店面名稱</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">狀態</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">商品資料</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">機臺資料</Typography>\r\n                    </Box>\r\n                    <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"}>\r\n                        <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"500\">更新資料</Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Box\r\n                    backgroundColor={colors.primary[400]}\r\n                    borderRadius=\"10px\"\r\n                    height={\"100%\"}\r\n                    overflow={\"auto\"}\r\n                >\r\n                    {stores.map((store, i) => (\r\n                        <Box\r\n                            key={`${store.id}-${i}`}\r\n                            display=\"flex\"\r\n                            justifyContent=\"space-between\"\r\n                            alignItems=\"center\"\r\n                            borderBottom={`3px solid ${colors.primary[500]}`}\r\n                            p=\"10px\"\r\n                        >\r\n                            <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} textAlign={\"center\"}>{store.name}</Box>\r\n                            <Box width={\"20%\"} display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} textAlign={\"center\"}>\r\n                                {(() => {\r\n                                    if (store.status.name === \"disable\") {\r\n                                        return (\r\n                                            <Typography variant=\"h5\" color={colors.primary[100]} sx={{ margin: \".5rem .5rem\" }}>\r\n                                                停用\r\n                                            </Typography>)\r\n                                    }\r\n                                    else if (store.status.name === \"banned\") {\r\n                                        return (\r\n                                            <Typography variant=\"h5\" color={colors.redAccent[500]} sx={{ margin: \".5rem .5rem\" }}>\r\n                                                封鎖\r\n                                            </Typography>)\r\n                                    }\r\n                                    else if (store.status.name === \"removed\") {\r\n                                        return (\r\n                                            <Typography variant=\"h5\" color={colors.redAccent[500]} sx={{ margin: \".5rem .5rem\" }}>\r\n                                                移除\r\n                                            </Typography>)\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n                                            <Typography variant=\"h5\" color={colors.greenAccent[500]} sx={{ margin: \".5rem .5rem\" }}>\r\n                                                正常\r\n                                            </Typography>)\r\n                                    }\r\n                                })()}\r\n                            </Box>\r\n\r\n                            {/* BUTTON TO MACHINE MANAGEMENT */}\r\n                            <Box\r\n                                width={\"20%\"}\r\n                                height={\"100%\"}\r\n                                display={\"flex\"}\r\n                                alignItems={\"center\"} justifyContent={\"center\"}\r\n                                borderRadius=\"4px\"\r\n                            >\r\n                                <Link\r\n                                    to={\"/commodity-management\"}\r\n                                    state={{\r\n                                        data: store,\r\n                                    }}\r\n                                >\r\n                                    <Button sx={{ color: colors.primary[100], border: \"1px solid\" + colors.grey[200], borderRadius: \"10px\", fontSize: \".9rem\", padding: \".5rem 2rem\" }}>\r\n                                        商品\r\n                                    </Button>\r\n                                </Link>\r\n                            </Box>\r\n                            <Box\r\n                                width={\"20%\"}\r\n                                height={\"100%\"}\r\n                                display={\"flex\"}\r\n                                alignItems={\"center\"} justifyContent={\"center\"}\r\n                                borderRadius=\"4px\"\r\n                            >\r\n                                <Link\r\n                                    to={\"/machine-management\"}\r\n                                    state={{\r\n                                        data: store,\r\n                                    }}\r\n                                >\r\n                                    <Button sx={{ color: colors.primary[100], border: \"1px solid\" + colors.grey[200], borderRadius: \"10px\", fontSize: \".9rem\", padding: \".5rem 2rem\" }}>\r\n                                        機台\r\n                                    </Button>\r\n                                </Link>\r\n                            </Box>\r\n                            <Box\r\n                                width={\"20%\"}\r\n                                display={\"flex\"}\r\n                                alignItems={\"center\"} justifyContent={\"center\"}\r\n                                borderRadius=\"4px\">\r\n                                <StoreListModal props={store} />\r\n                            </Box>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default StoreManagement"],"names":["areaData","checkoutSchema","yup","shape","name","required","status","brandId","brandName","principalName","principalLineUrl","principalEmail","email","StoreListModal","props","theme","useTheme","colors","tokens","palette","mode","useState","modal","setModal","setStatus","handleStatusChange","event","target","value","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","preventDefault","cityFilter","setCityFilter","areaFilter","setAreaFilter","selectedArea","setSelectedArea","handleCityChange","handleAreaChange","inputAddress","setInputAddress","address","coordinates","lat","lng","setLocation","id","entityName","intro","principalAccount","principalPassword","initialValues","setInitialValues","useLazyQuery","RemoveStore","ApolloRemoveStore","loading","error","data","useEffect","console","log","window","location","reload","UpdateStore","ApolloUpdateStore","data2","useQuery","GetStore","variables","args","data3","nonNullData","replaceNullWithEmptyString","getStore","brand","principal","account","lineUrl","cover","setCoverFileName","city","district","prevState","handleLocationSelect","geocodeByAddress","results","formattedAddress","address_components","long_name","getLatLng","latLng","handleDelete","confirm","UnbanStore","ApolloUnBanStore","data4","handleUnBan","e","reason","default_cover_900x300_filename","coverFileName","handleUploadCoverSucess","toggleModal","document","body","classList","add","remove","Loader","Error","Button","onClick","className","sx","color","primary","border","borderColor","blueAccent","Box","backgroundColor","m","onSubmit","values","description","coordinate","latitude","longitude","password","statusId","validationSchema","errors","touched","handleBlur","handleChange","handleSubmit","display","width","flexDirection","justifyContent","Typography","variant","mb","fontSize","fontWeight","textAlign","redAccent","greenAccent","CoverUpload","handleSuccess","imagePlaceHolder","getImgURL","type","TextField","fullWidth","label","onBlur","onChange","helperText","margin","borderRadius","FormControl","minWidth","InputLabel","Select","disabled","background","labelId","MenuItem","marginBottom","mr","onSelect","getInputProps","suggestions","getSuggestionItemProps","placeholder","map","suggestion","active","style","grey","cursor","padding","height","Object","keys","i","area","htmlFor","FilledInput","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","VisibilityOff","Visibility","FormHelperText","ConfirmModal","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","React","matches","match","setMatch","useEnhancedEffect","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","mediaQueryList","notify","getSnapshot","subscribe","CreateStoreModal","queryInput","options","getThemeProps","replace","undefined","useMediaQuery","setBrandInfo","btnTitle","GetBrandList","data1","brandListFilter","setBrandListFilter","brandList","setBrandList","managerGetBrands","handleBrandListChange","targetId","find","CreateStore","ApolloCreateStore","index","searchFilter","brandRef","useRef","searchRef","limit","setLimit","offset","setOffset","handlePageChange","brandArraySearch","array","keyword","searchTerm","filter","RegExp","storeArraySearch","GetAllStores","initStores","SetInitStores","stores","setStores","managerGetStores","p","alignItems","maxWidth","InputBase","ml","pr","flex","inputRef","citiesData","bgcolor","current","brandValue","storeValue","length","search","Search","fontsize","marginLeft","borderBottom","Pagination","onPageChange","Refresh","overflow","store","to","state"],"sourceRoot":""}